name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events.
  push: {}
  pull_request: {}

  # Run the pipeline daily so that we get continuous dogfooding.
  schedule:
    # Run at 6pm UTC/10am Pacific
    - cron: 0 18 * * *

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch: { }

jobs:
  check:
    name: Typecheck, lint, and audit
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: yarn

      - uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('yarn.lock') }}

      - id: install
        run: yarn install --immutable

      - run: yarn build

      - if: ${{ always() && steps.install.outcome == 'success' }}
        run: yarn lint

      - if: ${{ always() && steps.install.outcome == 'success' }}
        run: yarn prettier:check

      # Don't block the build on audit failures except in the private fork. We still have Dependabot
      # alerts enabled in the public repo, however.
      - if: ${{ always() && github.repository == 'unflakable-javascript-private' && steps.install.outcome == 'success' }}
        run: yarn audit

      - uses: dorny/paths-filter@v2
        id: affects_plugins
        with:
          filters: |
            jest:
              - package.json
              - tsconfig.json
              - .github/workflows/ci.yaml
              - packages/jest-plugin/**
              - packages/js-api/**
              - packages/plugins-common/**
              - scripts/set-jest-version.ts
    outputs:
      affects_jest: ${{ steps.affects_plugins.outputs.jest }}

  jest_integration_tests:
    name: "Jest Integration Tests: Jest ${{ matrix.jest }} + Node ${{ matrix.node }}"
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs:
      # Don't incur the cost of the test matrix if the basic build fails.
      - check
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' || needs.check.outputs.affects_jest == 'true'
    strategy:
      fail-fast: false
      matrix:
        node:
          - 14
          - 16
          - 18
        jest:
          - "29.5"
          - "29.4"
          - "29.3"
          - "29.2"
          - "29.1"
          - "29.0"
          - "28.1"
          - "28.0"
          - "27.5"
          - "27.4"
          - "27.3"
          - "27.2"
          - "27.1"
          - "27.0"
          - "26.6"
          - "26.5"
          - "26.4"
          - "26.3"
          - "26.2"
          - "26.1"
          - "26.0"
          - "25.5"
          - "25.4"
          - "25.3"
          - "25.2"
          - "25.1"

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: yarn

      - uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node${{ matrix.node }}-jest${{ matrix.jest }}-modules-${{ hashFiles('yarn.lock') }}

      - id: install
        run: yarn install --immutable

      # Since Jest is composed of many packages, we need to make sure that they're all using the
      # same major and minor versions. Otherwise, NPM will keep the newer minor versions since
      # they're semver-compatible. This script iteratively installs the lowest compatible semver
      # version for each package until yarn.lock converges. See the script for some edge cases due
      # to missing package versions with certain minor version numbers.
      - name: Set Jest version
        run: |
          yarn set-jest-version ${{ matrix.jest }}
          grep --after-context=1 "^\".*jest.*" yarn.lock

      - name: Set resolution for chalk to 3.0.0
        if: ${{ startsWith(matrix.jest, '25.')  }}
        run: yarn set resolution "chalk@npm:^3.0.0 || ^4.0.0" 3.0

      - run: yarn build:plugins

      - name: Test
        env:
          DEBUG: unflakable:*
        run: |
          if [ "${{ github.repository }}" == "unflakable/unflakable-javascript" ]; then
            export UNFLAKABLE_SUITE_ID=29KWCuK12VnU7pkpvWgrGS0woAX
          else
            export UNFLAKABLE_SUITE_ID=28UidZ8cSKjRe4g1xkd9EE8noDF
          fi
          UNFLAKABLE_API_KEY=${{ secrets.UNFLAKABLE_API_KEY }} \
            yarn workspace jest-integration test \
            --reporters @unflakable/jest-plugin/dist/reporter \
            --runner @unflakable/jest-plugin/dist/runner
